AR = ar
ARFLAGS = cr
#If your system has ranlib, then replace next statement with the one after it.
RANLIB = echo
#RANLIB = ranlib
CC = mpicc
CLD = $(CC)
F77 = mpif90
F77LD = $(F77)
FFXN =  -DAdd_
FSUFFIX = F

MPIF77 = $(F77) 
MPICC = $(CC)

# To use MPI, set the MPIDIR to location of mpi library, and MPILIB 
# to name of mpi library. Remove # signs from beginning of next 3 lines.
# Also, if the previous compilation was without MPI, type: make realclean
# before compiling for mpi.
#
MPIDIR =  -L${MVAPICH2_HOME}/lib 
MPILIB =  -lfmpich  -lmpich  -lmpichcxx  -lmpichf90  -lmpl  -lopa

# If _LONG_LONG type is available, then you can use the addition flag
# -D_LONG_LONG. Set F77 to echo to compile the C version alone. 
# Try adding: -DGENERIC to CFLAGS. This can improve speed, but may give
# incorrect values. Check with 'checksprng' to see if it works.

CFLAGS =  -O3 -DLittleEndian $(PMLCGDEF) $(MPIDEF) -D$(PLAT) -I${MVAPICH2_HOME}/include
CLDFLAGS = -O3
FFLAGS = -O3 -DPOINTER_SIZE=8 $(PMLCGDEF) $(MPIDEF) -D$(PLAT) -I${MVAPICH2_HOME}/include
F77LDFLAGS = -O3

CPP = cpp -P

